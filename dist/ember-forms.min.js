// ==========================================================================
// Project:  Ember Form
// Copyright: Â©2012 Josep Jaume Rey and Contributors
// License:   Licensed under MIT license (see license.js)
// ==========================================================================



(function(){window.EF=Ember.Namespace.create({findFormRecursively:function(a){var b=a;do if(b.get("isForm")===!0)return b;while(b=a.get("parentView"))},findFieldRecursively:function(a){var b=a;do if(b.get("isField")===!0)return b;while(b=a.get("parentView"))},findField:function(a){a=a||"text";var b=Ember.String.camelize(a);b=b.replace(/^./,b[0].toUpperCase()),b+="Field";var c=EF[b];if(c)return c;throw"Field "+a+" cannot be found"}})})(),function(){var a=EF.findFieldRecursively;EF.Label=Ember.View.extend({tagName:"label",field:Ember.computed(function(){return a(this)}),attributeBindings:["for"],formBinding:"field.form",name:Ember.computed(function(){return this.getPath("field.label")||this.getPath("field.name")}),nameBinding:"field.label",template:Ember.Handlebars.compile("{{view.name}}"),didInsertElement:function(){Ember.bind(this,"for","component.inputView.elementId")}})}(),function(){var a=EF.findFormRecursively;EF.BaseField=Ember.View.extend({name:null,formView:null,tagName:"div",classNames:["input"],LabelView:EF.Label.extend(),InputView:null,value:null,isField:!0,template:Ember.Handlebars.compile('{{view view.LabelView viewName="labelView"}}{{view view.InputView viewName="inputView" fieldBinding="view"  valueBinding="view.value" nameBinding="view.name"}}'),setFormView:function(){var b=a(this.get("parentView"));b.get("fieldViews").pushObject(this),this.set("formView",b),this.set("content",b.get("content"))},bindValue:function(){Ember.oneWay(this,"value","content."+this.get("name"))},data:Ember.computed(function(){var a={};return a[this.get("name")]=this.get("value"),a}).property("value"),init:function(){this._super(),this.setFormView(),this.bindValue()}})}(),function(){EF.TextField=EF.BaseField.extend({InputView:Ember.TextField.extend({attributeBindings:["name"]})})}(),function(){EF.TextareaField=EF.BaseField.extend({InputView:Ember.TextArea.extend({template:Ember.Handlebars.compile("{{view.value}}")})})}(),function(){EF.SubmitButton=Ember.View.extend({tagName:"button",attributeBindings:["type"],type:"submit",name:"Save",template:Ember.Handlebars.compile("{{view.name}}")})}(),function(){EF.Form=Ember.View.extend({tagName:"form",attributeBindings:["action"],fieldViews:Ember.A(),buttons:["submit"],content:null,isForm:!0,data:Ember.computed(function(){var a={};return this.get("fieldViews").forEach(function(b){var c=b.get("data");for(var d in c)a[d]=c[d]}),a}).property("fieldViews.@each.value"),submit:function(){return this.save(this.get("data")),!1},save:function(a){}})}(),function(){var a=EF.findFormRecursively,b=EF.findField;EF.FieldHelper=Ember.Object.create({helper:function(a,c,d){var e=d.hash,f=e.as,g=d.data.view,h=b(f);Ember.empty(e.name)&&(e.name=c),delete e.as,g.appendChild(h,e)}}),Ember.Handlebars.registerHelper("field",function(a,b){EF.FieldHelper.helper(this,a,b)})}(),function(){var a=EF.findFormRecursively,b=EF.findField;EF.ButtonHelper=Ember.Object.create({helper:function(a,b){var c=EF.SubmitButton,d=b.data.view;d.appendChild(c,b.hash)}}),Ember.Handlebars.registerHelper("form",function(a,b){if(a==="buttons")EF.ButtonHelper.helper(this,b);else throw"Unknown "+a+" in form helper"})}(),function(){}()