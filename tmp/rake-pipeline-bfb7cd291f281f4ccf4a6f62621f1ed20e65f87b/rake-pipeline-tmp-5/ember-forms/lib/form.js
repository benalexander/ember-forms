minispade.register('ember-forms/form', "(function() {/*\n * Usage:\n */\nEF.Form = Ember.ContainerView.extend({\n  tagName: 'form',\n  attributeBindings: ['action'],\n  fields: [],\n  buttons: ['submit'],\n  object: null,\n\n  fieldViews: Ember.computed(function(){\n    return this.get('fields').map(function(options){\n      var componentName = Ember.String.camelize(options.type || 'text');\n      delete(options.type);\n      componentName = componentName.replace(/^./, componentName[0].toUpperCase());\n      componentName = componentName + 'Component';\n      var component = EF[componentName].create(options);\n      return component;\n    });\n  }).property('fields'),\n\n  childViews: Ember.computed(function(){\n    return this.get('fieldViews').concat(this.get('buttonViews'));\n  }).property('fields'),\n\n  buttonViews: Ember.computed(function(){\n    return this.get('buttons').map(function(buttonName){\n      buttonName = buttonName.replace(/^./, buttonName[0].toUpperCase());\n      buttonName = buttonName + 'Button';\n      var button = EF[buttonName].create();\n      return button;\n    });\n  }).property('buttons'),\n\n  data: Ember.computed(function(){\n    var data = {};\n    this.get('fieldViews').forEach(function(field){\n      var fieldData = field.get('data');\n      for(var key in fieldData){\n        data[key] = fieldData[key];\n      }\n    });\n    return data;\n  }).property('fieldViews.@each.value'),\n\n  submit: function(){\n    return false;\n  }\n});\n\n})();\n//@ sourceURL=ember-forms/form");